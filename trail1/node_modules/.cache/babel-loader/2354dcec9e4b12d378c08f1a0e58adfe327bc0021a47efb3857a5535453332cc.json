{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst API_BASE_URL = process.env.REACT_APP_API_URL || (process.env.NODE_ENV === 'production' ? 'https://your-production-domain.com/api' : 'http://localhost:3001/api');\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  // Prevent indefinite hanging requests\n  timeout: 30000\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const authAPI = {\n  register: async userData => {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  },\n  login: async (email, password) => {\n    const response = await api.post('/auth/login', {\n      email,\n      password\n    });\n    return response.data;\n  },\n  getProfile: async () => {\n    const response = await api.get('/auth/profile');\n    return response.data;\n  },\n  updateProfile: async userData => {\n    const response = await api.put('/auth/profile', userData);\n    return response.data;\n  }\n};\n\n// Product API calls\nexport const productAPI = {\n  getAll: async (filters = {}) => {\n    const params = new URLSearchParams();\n    Object.keys(filters).forEach(key => {\n      if (filters[key]) params.append(key, filters[key]);\n    });\n    const response = await api.get(`/products?${params}`);\n    return response.data;\n  },\n  getById: async id => {\n    const response = await api.get(`/products/${id}`);\n    return response.data;\n  },\n  getByType: async type => {\n    const response = await api.get(`/products/type/${type}`);\n    return response.data;\n  }\n};\n\n// Cart API calls\nexport const cartAPI = {\n  getCart: async () => {\n    const response = await api.get('/cart');\n    return response.data;\n  },\n  addToCart: async item => {\n    const response = await api.post('/cart', item);\n    return response.data;\n  },\n  updateCartItem: async (id, quantity) => {\n    const response = await api.put(`/cart/${id}`, {\n      quantity\n    });\n    return response.data;\n  },\n  removeFromCart: async id => {\n    const response = await api.delete(`/cart/${id}`);\n    return response.data;\n  },\n  clearCart: async () => {\n    const response = await api.delete('/cart');\n    return response.data;\n  }\n};\n\n// Order API calls\nexport const orderAPI = {\n  create: async orderData => {\n    const response = await api.post('/orders', orderData);\n    return response.data;\n  },\n  getById: async id => {\n    const response = await api.get(`/orders/${id}`);\n    return response.data;\n  },\n  getUserOrders: async () => {\n    const response = await api.get('/orders/user');\n    return response.data;\n  },\n  getPaymentDetails: async orderNumber => {\n    const response = await api.get(`/orders/${orderNumber}/payment`);\n    return response.data;\n  },\n  verifyPayment: async paymentData => {\n    const response = await api.post('/orders/verify-payment', paymentData);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","NODE_ENV","api","create","baseURL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","register","userData","post","data","login","email","password","getProfile","get","updateProfile","put","productAPI","getAll","filters","params","URLSearchParams","Object","keys","forEach","key","append","getById","id","getByType","type","cartAPI","getCart","addToCart","item","updateCartItem","quantity","removeFromCart","delete","clearCart","orderAPI","orderData","getUserOrders","getPaymentDetails","orderNumber","verifyPayment","paymentData"],"sources":["C:/Users/satya3479/OneDrive/Desktop/real/trail1/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nconst API_BASE_URL = process.env.REACT_APP_API_URL || (\n  process.env.NODE_ENV === 'production'\n    ? 'https://your-production-domain.com/api'\n    : 'http://localhost:3001/api'\n);\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  // Prevent indefinite hanging requests\n  timeout: 30000\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API calls\nexport const authAPI = {\n  register: async (userData) => {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  },\n\n  login: async (email, password) => {\n    const response = await api.post('/auth/login', { email, password });\n    return response.data;\n  },\n\n  getProfile: async () => {\n    const response = await api.get('/auth/profile');\n    return response.data;\n  },\n\n  updateProfile: async (userData) => {\n    const response = await api.put('/auth/profile', userData);\n    return response.data;\n  }\n};\n\n// Product API calls\nexport const productAPI = {\n  getAll: async (filters = {}) => {\n    const params = new URLSearchParams();\n    Object.keys(filters).forEach(key => {\n      if (filters[key]) params.append(key, filters[key]);\n    });\n    const response = await api.get(`/products?${params}`);\n    return response.data;\n  },\n\n  getById: async (id) => {\n    const response = await api.get(`/products/${id}`);\n    return response.data;\n  },\n\n  getByType: async (type) => {\n    const response = await api.get(`/products/type/${type}`);\n    return response.data;\n  }\n};\n\n// Cart API calls\nexport const cartAPI = {\n  getCart: async () => {\n    const response = await api.get('/cart');\n    return response.data;\n  },\n  addToCart: async (item) => {\n    const response = await api.post('/cart', item);\n    return response.data;\n  },\n  updateCartItem: async (id, quantity) => {\n    const response = await api.put(`/cart/${id}`, { quantity });\n    return response.data;\n  },\n  removeFromCart: async (id) => {\n    const response = await api.delete(`/cart/${id}`);\n    return response.data;\n  },\n  clearCart: async () => {\n    const response = await api.delete('/cart');\n    return response.data;\n  }\n};\n\n// Order API calls\nexport const orderAPI = {\n  create: async (orderData) => {\n    const response = await api.post('/orders', orderData);\n    return response.data;\n  },\n\n  getById: async (id) => {\n    const response = await api.get(`/orders/${id}`);\n    return response.data;\n  },\n\n  getUserOrders: async () => {\n    const response = await api.get('/orders/user');\n    return response.data;\n  },\n\n  getPaymentDetails: async (orderNumber) => {\n    const response = await api.get(`/orders/${orderNumber}/payment`);\n    return response.data;\n  },\n\n  verifyPayment: async (paymentData) => {\n    const response = await api.post('/orders/verify-payment', paymentData);\n    return response.data;\n  }\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}