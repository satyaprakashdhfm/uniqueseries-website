{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satya3479\\\\OneDrive\\\\Desktop\\\\real\\\\trail1\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { cartAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cartItems, setCartItems] = useState([]);\n  const [cartTotals, setCartTotals] = useState({\n    subtotal: 0,\n    gst: 0,\n    shipping: 0,\n    total: 0\n  });\n  const [loading, setLoading] = useState(false);\n\n  // Load cart from localStorage on component mount\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      try {\n        const parsedCart = JSON.parse(savedCart);\n        setCartItems(parsedCart);\n      } catch (error) {\n        console.error('Error parsing cart from localStorage:', error);\n        localStorage.removeItem('cart');\n      }\n    }\n  }, []);\n\n  // Save cart to localStorage whenever cartItems changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cartItems));\n    if (cartItems.length > 0) {\n      calculateCartTotals();\n    } else {\n      setCartTotals({\n        subtotal: 0,\n        gst: 0,\n        shipping: 0,\n        total: 0\n      });\n    }\n  }, [cartItems]);\n  const calculateCartTotals = async () => {\n    if (cartItems.length === 0) return;\n    try {\n      setLoading(true);\n      const items = cartItems.map(item => ({\n        productId: item.id,\n        quantity: item.quantity\n      }));\n      const response = await cartAPI.calculateTotals(items);\n      setCartTotals(response.summary);\n    } catch (error) {\n      console.error('Error calculating cart totals:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const addToCart = (product, quantity = 1) => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(item => item.id === product.id);\n      if (existingItem) {\n        // Update quantity if item already exists\n        return prevItems.map(item => item.id === product.id ? {\n          ...item,\n          quantity: item.quantity + quantity\n        } : item);\n      } else {\n        // Add new item to cart\n        return [...prevItems, {\n          ...product,\n          quantity,\n          addedAt: Date.now()\n        }];\n      }\n    });\n    console.log(`${product.name} added to cart!`);\n  };\n  const removeFromCart = productId => {\n    setCartItems(prevItems => {\n      const itemToRemove = prevItems.find(item => item.id === productId);\n      if (itemToRemove) {\n        console.log(`${itemToRemove.name} removed from cart`);\n      }\n      return prevItems.filter(item => item.id !== productId);\n    });\n  };\n  const updateQuantity = (productId, newQuantity) => {\n    if (newQuantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n    setCartItems(prevItems => prevItems.map(item => item.id === productId ? {\n      ...item,\n      quantity: newQuantity\n    } : item));\n  };\n  const clearCart = () => {\n    setCartItems([]);\n    localStorage.removeItem('cart');\n    console.log('Cart cleared');\n  };\n  const getCartItemsCount = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\n  };\n  const checkStockAvailability = async () => {\n    if (cartItems.length === 0) return {\n      allItemsAvailable: true,\n      items: []\n    };\n    try {\n      const items = cartItems.map(item => ({\n        productId: item.id,\n        quantity: item.quantity\n      }));\n      const response = await cartAPI.checkStock(items);\n      return response;\n    } catch (error) {\n      console.error('Error checking stock availability:', error);\n      throw error;\n    }\n  };\n  const value = {\n    cartItems,\n    cartTotals,\n    loading,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getCartItemsCount,\n    checkStockAvailability,\n    calculateCartTotals\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"+9lpgQ6tdtoDfpDZpbFuCOx9rC0=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","cartAPI","jsxDEV","_jsxDEV","CartContext","useCart","_s","context","Error","CartProvider","children","_s2","cartItems","setCartItems","cartTotals","setCartTotals","subtotal","gst","shipping","total","loading","setLoading","savedCart","localStorage","getItem","parsedCart","JSON","parse","error","console","removeItem","setItem","stringify","length","calculateCartTotals","items","map","item","productId","id","quantity","response","calculateTotals","summary","addToCart","product","prevItems","existingItem","find","addedAt","Date","now","log","name","removeFromCart","itemToRemove","filter","updateQuantity","newQuantity","clearCart","getCartItemsCount","reduce","checkStockAvailability","allItemsAvailable","checkStock","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/satya3479/OneDrive/Desktop/real/trail1/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { cartAPI } from '../services/api';\n\nconst CartContext = createContext();\n\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n\nexport const CartProvider = ({ children }) => {\n  const [cartItems, setCartItems] = useState([]);\n  const [cartTotals, setCartTotals] = useState({\n    subtotal: 0,\n    gst: 0,\n    shipping: 0,\n    total: 0\n  });\n  const [loading, setLoading] = useState(false);\n\n  // Load cart from localStorage on component mount\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      try {\n        const parsedCart = JSON.parse(savedCart);\n        setCartItems(parsedCart);\n      } catch (error) {\n        console.error('Error parsing cart from localStorage:', error);\n        localStorage.removeItem('cart');\n      }\n    }\n  }, []);\n\n  // Save cart to localStorage whenever cartItems changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cartItems));\n    if (cartItems.length > 0) {\n      calculateCartTotals();\n    } else {\n      setCartTotals({ subtotal: 0, gst: 0, shipping: 0, total: 0 });\n    }\n  }, [cartItems]);\n\n  const calculateCartTotals = async () => {\n    if (cartItems.length === 0) return;\n\n    try {\n      setLoading(true);\n      const items = cartItems.map(item => ({\n        productId: item.id,\n        quantity: item.quantity\n      }));\n\n      const response = await cartAPI.calculateTotals(items);\n      setCartTotals(response.summary);\n    } catch (error) {\n      console.error('Error calculating cart totals:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addToCart = (product, quantity = 1) => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(item => item.id === product.id);\n      \n      if (existingItem) {\n        // Update quantity if item already exists\n        return prevItems.map(item =>\n          item.id === product.id\n            ? { ...item, quantity: item.quantity + quantity }\n            : item\n        );\n      } else {\n        // Add new item to cart\n        return [...prevItems, { \n          ...product, \n          quantity,\n          addedAt: Date.now()\n        }];\n      }\n    });\n    \n    console.log(`${product.name} added to cart!`);\n  };\n\n  const removeFromCart = (productId) => {\n    setCartItems(prevItems => {\n      const itemToRemove = prevItems.find(item => item.id === productId);\n      if (itemToRemove) {\n        console.log(`${itemToRemove.name} removed from cart`);\n      }\n      return prevItems.filter(item => item.id !== productId);\n    });\n  };\n\n  const updateQuantity = (productId, newQuantity) => {\n    if (newQuantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n\n    setCartItems(prevItems =>\n      prevItems.map(item =>\n        item.id === productId\n          ? { ...item, quantity: newQuantity }\n          : item\n      )\n    );\n  };\n\n  const clearCart = () => {\n    setCartItems([]);\n    localStorage.removeItem('cart');\n    console.log('Cart cleared');\n  };\n\n  const getCartItemsCount = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\n  };\n\n  const checkStockAvailability = async () => {\n    if (cartItems.length === 0) return { allItemsAvailable: true, items: [] };\n\n    try {\n      const items = cartItems.map(item => ({\n        productId: item.id,\n        quantity: item.quantity\n      }));\n\n      const response = await cartAPI.checkStock(items);\n      return response;\n    } catch (error) {\n      console.error('Error checking stock availability:', error);\n      throw error;\n    }\n  };\n\n  const value = {\n    cartItems,\n    cartTotals,\n    loading,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getCartItemsCount,\n    checkStockAvailability,\n    calculateCartTotals\n  };\n\n  return (\n    <CartContext.Provider value={value}>\n      {children}\n    </CartContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}